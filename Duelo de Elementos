#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

struct CARTAS {
    char elemento[10];
    int numero[10];
    int jogada[9];
};

/*int contarItens(char *vetor[]) {
    int quant = 0;
    while (vetor[quant] != NULL) {
        quant++;
    }
    
    return quant;
} */

int Duelo (int fase, struct CARTAS* jogador1, struct CARTAS* jogador2)
{
	int jogadaP1 = 0, jogadaP2 = 0, count1 = 0, count2 = 0;
	
	if (fase == 1)
	{
		for (int i = 0; i < 6; i++)
		{
			if (i % 2 == 0)
			{
				printf("Vez do JOGADOR 1 \n");
				scanf("%d", &jogadaP1);
				jogador1->jogada[i] = jogador1->numero[jogadaP1-1];
			}
			
			else
			{
				printf("Vez do JOGADOR 2 \n");
				scanf("%d", &jogadaP2);
				jogador2->jogada[i] = jogador2->numero[jogadaP2-1];
			}
			
		}
		
		for(int g = 0; g < 3; g++)
		{
			if (jogador1->jogada[g] > jogador2->jogada[g+1])
			{
				count1++;
			}
			
			else if (jogador1->jogada[g] < jogador2->jogada[g+1])
			{
				count2++;
			}
				
		}
		
		if(count1 > count2)
		{
			printf("Placar final: jogador1 %d vs %d jogador2 \n", count1, count2);
			printf("Jogador 1 venceu! \n");
			//system("cls"); //Limpador de tela
		}
		
		else
		{
			printf("Placar final: jogador1  %d vs %d jogador2 \n", count1, count2);
			printf("Jogador 2 venceu! \n");
			//system("cls"); //Limpador de tela
		}
	}
}

int Fase(struct CARTAS* jogador1, struct CARTAS* jogador2, int escolha) {
    const char* elementos[] = {"AGUA", "FOGO", "TERRA"}; 
    //int numElementos = sizeof(elementos) / sizeof(elementos[0]);
    //int numElementos = contarItens(*elementos);

    if (escolha == 1) {
        for (int i = 0; i < 3; i++) {
            jogador1->numero[i] = rand() % 10;
            strcpy(jogador1->elemento, elementos[rand() % 3]);
            printf("Carta %d do player 1: %d, Elemento: %s\n", i + 1, jogador1->numero[i], jogador1->elemento);
        }

        for (int g = 0; g < 3; g++) {
            jogador2->numero[g] = rand() % 10;
            strcpy(jogador2->elemento, elementos[rand() % 3]);
            printf("Carta %d do player 2: %d, Elemento: %s\n", g + 1, jogador2->numero[g], jogador2->elemento);
        }
    } else if (escolha == 2) {
        for (int i = 0; i < 5; i++) {
            jogador1->numero[i] = rand() % 10;
            strcpy(jogador1->elemento, elementos[rand() % 3]);
            //printf("Carta %d do player 1: %d, Elemento: %s\n", i + 1, jogador1->numero[i], jogador1->elemento);
        }

        for (int g = 0; g < 5; g++) {
            jogador2->numero[g] = rand() % 10;
            strcpy(jogador2->elemento, elementos[rand() % 3]);
            //printf("Carta %d do player 2: %d, Elemento: %s\n", g + 1, jogador2->numero[g], jogador2->elemento);
        }
    }
    
    else if (escolha == 3) {
        for (int i = 0; i < 9; i++) {
            jogador1->numero[i] = rand() % 10;
            strcpy(jogador1->elemento, elementos[rand() % 3]);
            //printf("Carta %d do player 1: %d, Elemento: %s\n", i + 1, jogador1->numero[i], jogador1->elemento);
        }

        for (int g = 0; g < 9; g++) {
            jogador2->numero[g] = rand() % 10;
            strcpy(jogador2->elemento, elementos[rand() % 3]);
            //printf("Carta %d do player 2: %d, Elemento: %s\n", g + 1, jogador2->numero[g], jogador2->elemento);
        }
    }
    
    Duelo(escolha, jogador1, jogador2);
    
}

int main() {
    
    srand(time(NULL)); //A cada execução do código, os números gerados serão diferentes
	
	struct CARTAS* jogador1 = (struct CARTAS*)malloc(sizeof(struct CARTAS));
    struct CARTAS* jogador2 = (struct CARTAS*)malloc(sizeof(struct CARTAS));

    int escolha;

    while (escolha < 1 || escolha > 3) {
        printf("Escolha invalida! Por favor, escolha um numero entre 1 e 3.\n");
        printf("Escolha o numero de cartas para cada jogador: \n");
        printf("1- Tres Cartas \n");
        printf("2- Cinco Cartas \n");
        printf("3- Nove Cartas\n");
        scanf("%d", &escolha);
    }

    Fase(jogador1, jogador2, escolha);

    free(jogador1);
    free(jogador2);

    return 0;
}
